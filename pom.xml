<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.tensin.jww</groupId>
	<artifactId>jww</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<description>JWW</description>
	<name>jww</name>
	<packaging>jar</packaging>

	<properties>
		<sourceEncoding>UTF-8</sourceEncoding>
		<version.slf4j>1.7.2</version.slf4j>
		<version.logback>1.0.9</version.logback>
		<version.junit>4.11</version.junit>
		<version.guice>3.0</version.guice>
		<version.guava>13.0.1</version.guava>
		<version.simplexml>2.6.9</version.simplexml>
		<version.ebean>2.7.7</version.ebean>
		<version.jcommander>1.30</version.jcommander>
		<version.jetty>7.6.4.v20120524</version.jetty>
		<version.quartz>2.1.6</version.quartz>
		<version.velocity>1.7</version.velocity>
	</properties>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/run</directory>
			</resource>
		</resources>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/main/java</directory>
			</testResource>
			<testResource>
				<directory>src/test/java</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>add-source</id>
						<!-- <phase>process-resources</phase> -->
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/run</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Extension-Name>${project.name}</Extension-Name>
							<Specification-Title>${project.description}</Specification-Title>
							<Specification-Vendor>Tensin</Specification-Vendor>
							<Implementation-Vendor>Tensin</Implementation-Vendor>
							<Implementation-Title>${project.name}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Main-Class>org.tensin.mirror4j.boot.Mirror4J</Main-Class>
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<includeScope>compile</includeScope>
				</configuration>
			</plugin>
		</plugins>

	</build>

	<profiles>
		<profile>
			<id>dependencyList</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<configuration>
							<outputFile>target/maven-dependencies.txt</outputFile>
							<outputType>txt</outputType>
						</configuration>
						<!-- Inutilisable avec une phase : il faut que les fichiers soient
							créés sur disque *avant* compilation du premier module (ltp-start)
							... impossible
							avec maven, donc exécution obligatoire manuelle de "dependency:list"
							en goal
							sur la commande mvn : mvn dependency:list install pour créer les jars
							et
							avoir le start à jour -->
						<!-- <executions> <execution> <phase>validate</phase> <configuration>
							<outputFile>target/maven_dependencies.txt</outputFile> <outputType>txt</outputType>
							</configuration> <goals> <goal>list</goal> </goals> </execution> </executions> -->
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>org.simpleframework</groupId>
			<artifactId>simple-xml</artifactId>
			<version>${version.simplexml}</version>
			<exclusions>
				<exclusion>
					<groupId>stax</groupId>
					<artifactId>stax-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>stax</groupId>
					<artifactId>stax</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>${version.jcommander}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${version.slf4j}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${version.slf4j}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${version.logback}</version>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.9.8</version>
			<exclusions>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${version.guava}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${version.quartz}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${version.velocity}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
			<version>[3.0,)</version>
		</dependency>
	</dependencies>
	<url>https://github.com/SR-G/${project.name}</url>
	<organization>
		<name>tensin</name>
	</organization>
	<ciManagement>
		<system>Bamboo</system>
		<url>tensin.org:8085</url>
	</ciManagement>
	<scm>
		<url>https://github.com/SR-G/${project.name}</url>
		<developerConnection>sergio</developerConnection>
		<connection>scm:git:https://github.com/SR-G/${project.name}</connection>
	</scm>
</project>
